version: 2.1
orbs:
  node: circleci/node@5
jobs:
  test-node:
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Instalar dependências do sistema (Xvfb)
          command: |
            sudo apt-get update
            sudo apt-get install -y xvfb
      - run:
          name: Instalar Jest JUnit
          command: yarn add jest-junit --ignore-workspace-root-check
      - run:
          name: Rodar lint
          command: yarn lint
      - run:
          name: Rodar testes unitários
          command: yarn run jest --verbose --no-cache
      - run:
          name: Iniciar banco de dados
          command: nohup yarn init:db --port 3000 &
      - run:
          name: Iniciar aplicação
          command: nohup yarn run vite --port 3001 &
      - run:
          name: Rodar testes E2E
          command: yarn cy:run --headless
      - store_test_results:
          path: ./test-results/
      - run:
          name: Parar processos de servidor e banco de dados
          command: |
            kill $(lsof -t -i:3000)  # Fecha o processo do DB (porta 3000)
            kill $(lsof -t -i:3001)  # Fecha o processo do Vite (porta 3001)
  build-node:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Rodar build
          command: yarn run build
      - store_artifacts:
          path: dist
          destination: node-build
  deploy:
    docker:
      - image: cimg/node:18.16.1
    steps:
      - checkout
      - run:
          name: Instalar Vercel CLI
          command: yarn global add vercel
      - run:
          name: Autenticar Vercel
          command: vercel login --token $VERCEL_TOKEN
      - run:
          name: Fazer Deploy no Vercel
          command: vercel --prod --token $VERCEL_TOKEN
workflows:
  build-and-test-and-deploy:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
      - deploy:
          requires:
            - build-node
          filters:
            branches:
              only: main
